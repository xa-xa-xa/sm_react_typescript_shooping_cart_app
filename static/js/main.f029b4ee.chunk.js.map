{"version":3,"sources":["App.styles.ts","components/item/Item.style.tsx","components/item/Item.tsx","components/cartItem/CartItem.styles.ts","components/cartItem/CartItem.tsx","components/cart/Cart.styles.ts","components/cart/Cart.tsx","components/navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["Wrapper","styled","div","StyledButton","IconButton","Item","item","handleAddToCart","src","image","alt","title","price","description","Button","onClick","CartItem","addToCart","removeFromCart","className","amount","toFixed","size","disableElevation","variant","id","Remove","Add","aside","Cart","items","cartItems","setCartIsOpen","length","map","idx","Divider","light","orientation","reduce","acc","useStyles","makeStyles","theme","createStyles","root","flexGrow","cartButton","marginRight","spacing","styledButton","position","marginTop","badge","top","right","Navbar","props","cartIsOpen","classes","AppBar","Toolbar","Typography","name","AddShoppingCart","fontSize","style","color","Badge","badgeContent","getProducts","a","fetch","json","App","useState","setCartItems","useQuery","data","isLoading","error","clickedItem","find","i","LinearProgress","Drawer","anchor","open","onClose","prev","console","log","Grid","container","xs","sm","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.f029b4ee.chunk.js","sourcesContent":["import { IconButton } from '@material-ui/core';\nimport styled from 'styled-components'\n\nexport const Wrapper = styled.div`\npadding: 2rem;\n`;\n\nexport const StyledButton = styled(IconButton)`\nposition: fixed;\nz-index: 100;\nright: 1rem;\ntop: 1rem;\n`;","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\ndisplay: flex;\njustify-content: space-between;\nflex-direction: column;\nwidth: 100%;\nborder-radius: 10px;\nheight: 100%;\nbackground-color: white;\noverflow: hidden;\nbox-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n:hover {\n  box-shadow: 0 14px 28px rgba(0,0,0,0.15), 0 10px 10px rgba(0,0,0,0.12);\n}\nbutton {\n    padding: 1rem 0;\n    font-weight: 600;\n    color: #3f51b5;\n}\nimg {\n    max-height: 250px;\n    margin: 1.5rem;\n    object-fit: scale-down;\n    border-radius: 10px 10px 0 0;\n}\n\ndiv {\n    margin: 1rem;\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 1rem;\n    height: 100%;\n}\np {\n    overflow-wrap: break-word;\n}\nh3 {\n    text-align: center;\n}\n\nh4 {\n    text-align: center;\n    color: #3f51b5;\n}\n\n`","import { Button } from '@material-ui/core';\n\nimport { CartItemType } from '../../types';\nimport { Wrapper } from './Item.style';\n\ntype Props = {\n  item: CartItemType;\n  handleAddToCart: (clickedItem: CartItemType) => void;\n};\n\nconst Item: React.FC<Props> = ({ item, handleAddToCart }) => {\n  return (\n    <Wrapper>\n      <img src={item.image} alt={item.title}></img>\n      <div>\n        <h3>{item.title}</h3>\n        <h4>Price: ${item.price}</h4>\n        <p>{item.description}</p>\n      </div>\n      <Button onClick={() => handleAddToCart(item)}>Add to cart</Button>\n    </Wrapper>\n  );\n};\n\nexport default Item;\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\nfont-family: Arial, Helvetica, sans-serif;\ndisplay: flex;\njustify-content: space-between;\nalign-items: flex-end;\nmargin-bottom: 3rem;\ndiv {\n    display: flex;\n}\n\n.container {\n    width: 100%;\n    flex-direction: column;\n\n}\n.info-container {\n    justify-content: space-between;\n    .info {\n        width: 65%;\n        align-self: flex-end;\n        margin-right: 1rem;\n        p {\n            font-size: .8rem;\n        }\n    }\n    .image {\n        display: flex;\n        flex: 1;\n        align-items: center;\n        justify-content: center;\n        img {\n            max-width: 100%;\n            height: 100px;\n        }\n    }\n }\n\n.information, .buttons {\n    justify-content: space-between;\n}\n\n` ","import { CartItemType } from '../../types';\nimport { Wrapper } from './CartItem.styles';\nimport { Button } from '@material-ui/core';\nimport { Add, Remove } from '@material-ui/icons';\n\ntype Props = {\n  item: CartItemType;\n  addToCart: (clickedItem: CartItemType) => void;\n  removeFromCart: (id: number) => void;\n};\n\n//\nfunction CartItem({ item, addToCart, removeFromCart }: Props) {\n  return (\n    <Wrapper>\n      <div className='container'>\n        <h3>{item.title}</h3>\n        <div className='info-container'>\n          <section className='info'>\n            <div className='information'>\n              <p>Price: ${item.price}</p>\n              <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\n            </div>\n            <div className='buttons'>\n              <Button\n                size='small'\n                disableElevation\n                variant='contained'\n                onClick={() => removeFromCart(item.id)}\n              >\n                <Remove />\n              </Button>\n              <p>{item.amount}</p>\n              <Button\n                size='small'\n                disableElevation\n                variant='contained'\n                onClick={() => addToCart(item)}\n              >\n                <Add />\n              </Button>\n            </div>\n          </section>\n          <section className='image'>\n            <img src={item.image} alt={item.title} />\n          </section>\n        </div>\n      </div>\n    </Wrapper>\n  );\n}\n\nexport default CartItem;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.aside`\n  font-family: Arial, Helvetica, sans-serif;\n  width: 450px;\n  padding: 1rem;\n  .closeIcon {\n    float: right;\n    :hover {\n      cursor: pointer; \n    }\n  }\n`;\n","import Divider from '@material-ui/core/Divider';\nimport React from 'react';\nimport { CartItemType } from '../../types';\nimport CartItem from '../cartItem/CartItem';\nimport { Wrapper } from './Cart.styles';\nimport CloseIcon from '@material-ui/icons/Close';\n\ntype Props = {\n  cartItems: CartItemType[];\n  addToCart: (clickedItem: CartItemType) => void;\n  removeFromCart: (id: number) => void;\n  setCartIsOpen: (isOpen: boolean) => void;\n};\n\nfunction Cart({ cartItems, addToCart, removeFromCart, setCartIsOpen }: Props) {\n  const getTotal = (items: CartItemType[]) => {\n    return items.reduce((acc, item) => acc + item.amount * item.price, 0);\n  };\n\n  //\n  return (\n    <Wrapper>\n      <CloseIcon className=\"closeIcon\" onClick={()=>setCartIsOpen(false)} />\n      <h2>Shopping Cart</h2>\n      {!cartItems.length ? (\n        <p>Cart is empty</p>\n      ) : (\n        cartItems.map((item, idx) => {\n          return (\n            <>\n              <CartItem\n                key={item.id}\n                item={item}\n                addToCart={addToCart}\n                removeFromCart={removeFromCart}\n              />\n              {idx !== cartItems.length - 1 && (\n                <Divider\n                  light={true}\n                  orientation='horizontal'\n                  variant='middle'\n                />\n              )}\n            </>\n          );\n        })\n      )}\n      <Divider orientation='horizontal' />\n      <h2>Total: $ {getTotal(cartItems).toFixed(2)}</h2>\n    </Wrapper>\n  );\n}\n\nexport default Cart;\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { StyledButton } from '../../App.styles';\nimport { AddShoppingCart } from '@material-ui/icons';\nimport { Badge } from '@material-ui/core';\nimport { CartItemType } from '../../types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    cartButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n      styledButton: {\n          position: 'relative',\n          marginTop:\"-.5rem\"\n    },\n      badge: {\n          position: \"absolute\",\n          top: 12,\n          right: 6,\n    },\n  })\n);\n\nexport default function Navbar(props: {\n  cartItems: any;\n  setCartIsOpen: any;\n  cartIsOpen: any;\n}) {\n  const { cartItems, setCartIsOpen, cartIsOpen } = props;\n  const classes = useStyles();\n\n  const getTotalItems = (items: CartItemType[]) =>\n    items.reduce((acc: number, item) => acc + item.amount, 0);\n\n  return (\n    <AppBar position='fixed'>\n      <Toolbar>\n        <Typography variant='h6' className={classes.title}>\n          Shopping Cart\n        </Typography>\n              <StyledButton name='cart'\n                  className={classes.styledButton}\n                  onClick={() => setCartIsOpen(!cartIsOpen)} >\n          <AddShoppingCart fontSize='inherit' style={{color: \"white\"}} />\n          <Badge\n            badgeContent={getTotalItems(cartItems)}\n            color='error'\n            className={classes.badge}\n          />\n        </StyledButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import { useState } from 'react';\nimport { useQuery } from 'react-query';\n\nimport { Drawer, LinearProgress, Grid } from '@material-ui/core';\n\nimport { Wrapper } from './App.styles';\nimport { CartItemType } from './types';\nimport Item from './components/item/Item';\nimport Cart from './components/cart/Cart';\nimport Navbar from './components/navbar/Navbar';\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('https://fakestoreapi.com/products')).json();\n\nfunction App() {\n  const [cartIsOpen, setCartIsOpen] = useState(false);\n  const [cartItems, setCartItems] = useState<CartItemType[]>([]);\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products',\n    getProducts\n  );\n\n\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems((cartItems) => {\n      const alreadyInCart = cartItems.find((i) => i.id === clickedItem.id);\n      if (alreadyInCart) {\n        return cartItems.map((item) =>\n          item.id === clickedItem.id\n            ? { ...item, amount: item.amount + 1 }\n            : item\n        );\n      }\n      return [...cartItems, { ...clickedItem, amount: 1 }];\n    });\n  };\n\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems((prev) =>\n      prev.reduce((acc, item) => {\n        console.log(id);\n\n        if (item.id === id) {\n          if (item.amount === 1) return acc;\n          return [...acc, { ...item, amount: item.amount - 1 }];\n        } else {\n          return [...acc, item];\n        }\n      }, [] as CartItemType[])\n    );\n  };\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Cant load products n ow...</div>;\n\n  return (\n    <Wrapper className='App'>\n      <Drawer\n        anchor='right'\n        open={cartIsOpen}\n        onClose={() => setCartIsOpen(false)}\n      >\n        <Cart\n          cartItems={cartItems}\n          addToCart={handleAddToCart}\n          removeFromCart={handleRemoveFromCart}\n          setCartIsOpen={setCartIsOpen}\n        />\n      </Drawer>\n      <Navbar cartItems={cartItems} setCartIsOpen={setCartIsOpen} cartIsOpen={cartIsOpen}  />\n\n      <Grid container spacing={3} style={{position: \"relative\", marginTop: 48}}>\n        {data?.map((item) => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />\n  </QueryClientProvider>,\n\n  document.getElementById('root')\n);"],"sourceRoot":""}